subprojects { project ->
    project.afterEvaluate {
        if (project.name != 'apigateway-service' && project.name != 'eureka-service' && project.name != 'common') {
            apply plugin: 'jacoco'
            apply plugin: 'java'

            jacoco {
                toolVersion = '0.8.8'
            }

            jacocoTestReport {
                dependsOn test
                reports {
                    html.enabled true // html 설정
                    csv.enabled true // csv 설정
                    xml.enabled true
                    //xml 의 위치 조정
                    xml.destination file("${buildDir}/reports/jacoco.xml")
                }
                def Qdomains = []
                for (qPattern in '**/QA'..'**/QZ') { // qPattern = '**/QA', '**/QB', ... '*.QZ'
                    Qdomains.add(qPattern + '*')
                }
                afterEvaluate {
                    classDirectories.setFrom(
                            files(classDirectories.files.collect {
                                fileTree(dir: it, excludes: [
                                        // 측정 안하고 싶은 패턴
                                        "**/*Application*",
                                        "**/*Config*",
                                        "**/*Dto*",
                                        "**/*Request*",
                                        "**/*Response*",
                                        "**/*Interceptor*",
                                        "**/*Exception*"
                                        // Querydsl 관련 제거
                                ] + Qdomains)
                            })
                    )
                }
            }

            test {
                useJUnitPlatform()
                finalizedBy jacocoTestReport
            }
        }
    }
}